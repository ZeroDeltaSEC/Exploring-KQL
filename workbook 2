let UserSearch = trim(" ", tolower('{UserSearchParameter}'));
let StartTime = todatetime('{TimeRangeParameter:start}');
let EndTime = todatetime('{TimeRangeParameter:end}');
SigninLogs
| where TimeGenerated between (StartTime .. EndTime)
| where isempty(UserSearch) 
    or tolower(UserPrincipalName) contains UserSearch 
    or tolower(DisplayName) contains UserSearch 
    or tolower(UserDisplayName) contains UserSearch
| extend UserInfo = strcat(UserDisplayName, ' (', UserPrincipalName, ')')
| summarize 
    TotalLogins = count(),
    UniqueDevices = dcount(DeviceId),
    UniqueIPs = dcount(IPAddress),
    UniqueLocations = dcount(strcat(LocationDetails.city, ',', LocationDetails.countryOrRegion)),
    FirstSeen = min(TimeGenerated),
    LastSeen = max(TimeGenerated),
    RiskEvents = countif(RiskLevelDuringSignIn != 'none')
    by UserPrincipalName, UserDisplayName, UserInfo
| extend DaysActive = datetime_diff('day', LastSeen, FirstSeen)
| project UserInfo, TotalLogins, UniqueDevices, UniqueIPs, UniqueLocations, RiskEvents, DaysActive, FirstSeen, LastSeen
| sort by TotalLogins desc
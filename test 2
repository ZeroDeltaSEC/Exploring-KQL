1. Pornește un Workbook gol
Conectează-te la portal.azure.com și selectează Microsoft Sentinel.

Alege workspace-ul dorit, apoi în meniul din stânga intră la Workbooks.

Apasă ➕ Add workbook → se deschide un workbook gol.

În bara de sus, activează modul Edit (butonul Edit). 
Microsoft Learn

2. Adaugă parametrii (TimeRange, UPN, SelectedIP)
Parametrii sunt „containere” în care UI-ul sau alte controale pot citi/scrie valori. 
Microsoft Learn

2.1 TimeRange
Click Add → Add parameter.

Name: TimeRange Type: Time (Bifează „Required”).

Salvează.

2.2 UPN (utilizator)
Add → Add parameter din nou.

Name: UPN Type: Text.

Poți pune valoare implicită ececa@cexa.com în câmpul Default.

Dacă vrei dropdown: schimbă Type pe Drop down, alege Get data from → Query și folosește SigninLogs | summarize by UserPrincipalName.

Salvează.

2.3 SelectedIP (va fi setat automat de grid)
Add → Add parameter.

Name: SelectedIP Type: Text.

Lasă Default value gol; debifează Required.

(Opțional) activează Global ca să fie accesibil oriunde mai jos.

3. Primul query – „Top UserAgent / IP / Location”
Click Add → Add query.

Data source: Logs  Resource type: Log Analytics (și selectezi workspace-ul).

În editorul KQL lipește:

kusto
Copy
Edit
let base = SigninLogs
    | where TimeGenerated > ago({TimeRange})
    | where UserPrincipalName == '{UPN}';
base
| summarize Logins = count() by UserAgent, IPAddress, Location
| order by Logins desc
Apasă Run → schimbă Visualization pe Table (Grid).

În colțul din dreapta sus al controlului, click ⚙ Advanced settings.

Bifează When items are selected, export a parameter.

Field to export: IPAddress  Parameter name: SelectedIP.

Salvează. (De aici interactivitatea: când faci click pe un rând, valoarea IP intră în SelectedIP.) 
Microsoft Learn

4. Al doilea query – „Cine mai folosește IP-ul selectat?”
Add → Add query sub primul grid.

Setează aceleași Data source și Resource type.

KQL:

kusto
Copy
Edit
let lookBack  = {TimeRange};
let chosenIp  = '{SelectedIP}';
SigninLogs
| where TimeGenerated > ago(lookBack)
| where chosenIp == '' or IPAddress == chosenIp
| summarize Logins = count(),
            Users  = make_set(UserPrincipalName)
          by IPAddress, Location
| order by Logins desc
Rulează; păstrează vizualizarea Table sau alege Bar chart pentru efect vizual.

Dacă SelectedIP e gol (nu ai selectat încă nicio linie), query-ul arată toate IP-urile; imediat ce dai click pe un IP din primul grid, tabelul se actualizează doar pentru acel IP.

5. (Opțional) alte vizualizări
Top 10 UserAgents
Duplichează primul query, păstrează doar | summarize Logins = count() by UserAgent.

Hărți de locații
Schimbă vizualizarea pe Map și folosește coloana Location.

6. Testează interactivitatea
În bara de parametri (sub titlu) setează un interval (ex. Last 90 days) și introdu/alege UPN-ul dorit.

Dă click pe cel mai folosit IP din tabelul de sus → tabelul de jos ar trebui să se restrângă la acel IP și să-ți arate câți și care useri l-au mai folosit.

Schimbă UPN sau time-range și observă cum ambele tabele se reîmprospătează automat.

7. Salvează și distribuie
Apasă Save → alege Shared reports dacă vrei ca toți analiștii să-l vadă.

Poți exporta workbook-ul ca JSON (••• → Export) pentru a-l importa în alte workspaces sau a-l gestiona prin IaC.

Ai terminat!
Cu pașii de mai sus ți-ai creat primul workbook interactiv: inspector de autentificări care îți afișează rapid cele mai folosite browsere/dispozitive, IP-uri și locații, iar printr-un singur click îți arată automat toți utilizatorii care reutilizează același IP. Spor la analiză!



Sources


xxxxx


// 1. Calculăm durata aleasă în selectorul TimeRange
let lookBack = toduration({TimeRange});       // ex. P30D → 30.00:00:00

// 2. Construim baza filtrând pe interval + UPN
let base = SigninLogs
| where TimeGenerated > ago(lookBack)         // aici folosim durata convertită
| where UserPrincipalName == '{UPN}';         // o singură acoladă!

// 3. Statistica pe care o afişăm în grid
base
| summarize Logins = count() by UserAgent, IPAddress, Location
| order by Logins desc


xxxxxc

// add this just before your summarize
| extend Browser = tostring(parse_user_agent(UserAgent, "browser").Browser.Family)


// Base filters (time-range + optional UPN)
let startTime = datetime({TimeRange:start});
let endTime   = datetime({TimeRange:end});
let user      = '{UPN}';

SigninLogs
| where TimeGenerated between (startTime .. endTime)
| where user == '' or UserPrincipalName == user
// ──► NEW: turn the raw UA into a tiny object
| extend ua = parse_user_agent(UserAgent, "browser")          // returns a dynamic object
| extend Browser = tostring(ua.Browser.Family)                // e.g. "Chrome", "Edge"
| summarize Logins = count() by Browser, IPAddress, Location
| order by Logins desc


xxxxxc


let base = SigninLogs
| where UserPrincipalName == '{UPN}'
| where TimeGenerated {TimeRange:query}
| extend Browser = tostring(parse_user_agent(UserAgent).Browser.Family);   // "Chrome", "Edge", …

base
| summarize Logins = count() by Browser, IPAddress, Location
| order by Logins desc


xxxxxxx

let base = SigninLogs
| where TimeGenerated {TimeRange:query}
| where UserPrincipalName == '{UPN}'
| extend Browser = tostring(parse_user_agent(UserAgent, "browser").Browser.Family);

base
| summarize Logins = count() by Browser, IPAddress, Location
| order by Logins desc
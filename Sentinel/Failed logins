let FailedLogins = SigninLogs
| where ResultType != "0"
| summarize
FailedLoginCount = count(),
FailedLoginIPs = make_set(IPAddress),
FailedLoginCodes = make_set(ResultType),
FailedLoginApps = make_set(AppDisplayName),
FirstFailedLoginTime = min(TimeGenerated),
LastFailedLoginTime = max(TimeGenerated)
by UserPrincipalName, bin(TimeGenerated, 1h)
| where FailedLoginCount >= 5;
SigninLogs
| where ResultType == "0"
| where AppDisplayName == "Azure Portal"
| extend SuccessfulLoginTime = TimeGenerated
| join kind=inner (FailedLogins) on UserPrincipalName
| where LastFailedLoginTime < SuccessfulLoginTime
| where SuccessfulLoginTime - LastFailedLoginTime <= 1h
| project UserPrincipalName, FailedLoginCount, FailedLoginIPs, FailedLoginCodes, FailedLoginApps,
LastFailedLoginTime, SuccessfulLoginTime

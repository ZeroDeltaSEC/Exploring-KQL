Below is an end-to-end, beginner-friendly tutorial in English that shows how to capture every change recorded in the Incident Activity Log (owner changes, status changes, comments, etc.) and append it automatically to an Excel workbook that lives in OneDrive for Business or SharePoint.
The flow is completely “low-code”: Automation Rule → Logic App (“playbook”) → Excel Online.


---

0.  Prerequisites

Item	Why you need it	Typical role / licence

Sentinel workspace	Source of incidents	Microsoft Sentinel Contributor or higher
OneDrive for Business or SharePoint	Storage for the Excel file	M365 Business/Enterprise licence
Azure subscription	To host the Logic App	Logic App Contributor on the chosen Resource Group
Excel desktop (one time)	To prepare the file/table	Any version that supports “Table”



---

1.  Prepare the Excel file once

1. Open Excel → Blank workbook.


2. Type the headers on row 1 exactly as below, then turn them into a Table:

IncidentId | Action   | ActorUPN | TimeUTC | Details

Select A1:E1 → Insert ➜ Table → check “My table has headers”.

In Table Design rename the table to ActivityLog (important!).



3. Save the workbook in OneDrive for Business (or SharePoint) in a folder you’ll remember, e.g.

/SOC-Reports/Sentinel_IncidentActivity.xlsx

> Connector limits: Excel Online can insert up to ~64 000 rows in one go and works only when the file is closed. 






---

2.  Build the Logic App (the playbook)

We’ll use the Microsoft Sentinel connector trigger When an Azure Sentinel incident is updated (in Preview but stable). 

2.1  Create the Logic App

1. Azure Portal ➜ Create resource → Logic App (Consumption).


2. Fill in:

Name: la-export-incident-activity

Region: preferably the same as the Sentinel workspace.



3. Click Create, then Go to resource → Logic App Designer ➜ Blank Logic App.



2.2  Add the Sentinel trigger

1. Search for Sentinel → choose When an Azure Sentinel incident is updated (Preview).


2. Create the connection if prompted; select the subscription, resource group and workspace.



> The trigger payload contains everything that changed plus static incident fields. You can always inspect it later by dropping a Compose action with @triggerBody() and running a test. 



2.3  Initialise a helper variable (optional but cleaner)

Field	Value

Action name	Initialize variable
Name	ActionType
Type	String
Value	@{triggerBody()['operationName']}


Typical values are
Microsoft.SecurityInsights/Incidents/ChangeOwner,
*/ChangeStatus, */AddComment, etc.

2.4  Add “Add a row into a table” (Excel Online – Business)

1. + New step → search Excel Online (Business) → Add a row into a table.


2. Configure the connector:



Property	Value

Location	OneDrive for Business
Document Library	OneDrive
File	Browse to SOC-Reports/Sentinel_IncidentActivity.xlsx
Table	ActivityLog


3. Map columns using Dynamic content or Expressions:



Excel column	Mapping	Note

IncidentId	Incident ID	@triggerBody()['properties']['incidentId'] if it doesn’t appear
Action	ActionType variable	=
ActorUPN	Modified By User Principal Name	@triggerBody()['properties']['modifiedBy']['userPrincipalName']
TimeUTC	Modified Time UTC	@triggerBody()['properties']['modifiedTimeUtc']
Details	expression (captures diff / comment) <br>@{coalesce(triggerBody()['properties']['comment'], triggerBody()['properties']['newValue'], '')}	Fallback chain picks the first non-null value


> Need raw payload? Use Parse JSON on triggerBody()['properties']['valueChanges'] if you want exact old/new values.



4. Click Save.




---

3.  Attach the Logic App with an Automation Rule

Automation rules fire on incident creation/update and can call playbooks. 

1. Sentinel ➜ Automation ➜ Create Automation rule.


2. Configure:
| Setting | Value | |---------|-------| | Name | Run playbook – Export activity to Excel | | Trigger | When incident is updated | | Conditions | leave empty or filter (e.g., Severity ≥ Medium) | | Action | Run playbook → pick la-export-incident-activity |


3. Click Create (or Save & enable).




---

4.  Test the pipeline

1. Open any incident in Sentinel → change Owner or Status → Save.


2. In the Logic App blade Runs history you should see a new successful run.


3. Open the Excel file → the ActivityLog table now contains a fresh row with Incident ID, action, actor, timestamp, and any comment/details.



If nothing appears:

Confirm the Automation Rule is Enabled.

Look at the Logic App run → Trigger Outputs to verify payload.

Ensure the Excel file is closed and the table is still named ActivityLog.



---

5.  Bring the workbook into Power BI

1. Power BI Desktop ➜ Get Data ➜ Excel → pick Sentinel_IncidentActivity.xlsx from OneDrive.


2. Select the ActivityLog table.


3. Build visuals:

Timeline (TimeUTC on X, IncidentId as legend)

Count of Action by Action → bar chart

Calculate MTTR with DAX:

MTTR (mins) =
  AVERAGEX (
    ADDCOLUMNS (
      SUMMARIZE ( ActivityLog, ActivityLog[IncidentId] ),
      "CloseTime",
        CALCULATE ( MIN ( ActivityLog[TimeUTC] ),
                    ActivityLog[Action] = "*/ChangeStatus" &&
                    ActivityLog[Details] = "Closed" )
    ),
    DATEDIFF ( MINX ( FILTER ( ActivityLog, ActivityLog[IncidentId] = EARLIER ( ActivityLog[IncidentId] ) ), ActivityLog[TimeUTC] ),
               [CloseTime],
               MINUTE )
  )



4. Publish to Power BI Service → set Scheduled refresh (OneDrive files refresh up to 8×/day without a gateway).




---

6.  Permissions & cost quick-sheet

Area	Requirement / Cost

Logic App Consumption	~€0.000025 per action; with a few hundred updates per month the cost is pennies
Sentinel	No extra cost (connector calls are free)
Excel Online connector	Included in Microsoft 365 Business/Enterprise
IAM	Sentinel Contributor (workspace) to create Automation Rule; Logic Apps Contributor (RG) to edit the playbook; OneDrive/SharePoint write access to the file



---

Why these steps work

Logic App Sentinel trigger surfaces every incident update event, including owner, status and comment metadata. 

Automation Rule fires the playbook on each update across the incident lifecycle. 

Excel Online (Business) “Add a row into a table” action can append data to a cloud-hosted workbook at low cost and zero infrastructure. 


You now have a fully automated pipeline that turns Sentinel’s Activity Log into structured data, ready for reporting, without writing a single line of code beyond copy-pasting a few expressions. If you need extra help—for example, extracting the exact old vs new owner or status values—just let me know and I can show you a Parse JSON pattern or provide the complete Logic App ARM template.


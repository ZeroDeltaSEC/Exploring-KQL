1) File transfer via CLI tools (curl, wget, scp, Invoke-WebRequest)

Shows command-line processes used for file transfer and their associated network connections.

// CLI file transfer candidates (last 24h) - process events + network enrichment
let timeframe = 24h;
let cliNames = dynamic(["powershell.exe","pwsh.exe","curl.exe","wget.exe","scp.exe","sftp.exe","bash","sh"]);
DeviceProcessEvents
| where Timestamp >= ago(timeframe)
| where FileName in~ (cliNames)
| where ProcessCommandLine has_any ("Invoke-WebRequest","Invoke-RestMethod","curl","wget","scp","sftp","-O","--upload-file","--upload","PUT","POST")
| project Timestamp, DeviceName, InitiatingProcessAccountName, FileName, ProcessCommandLine, InitiatingProcessFileName, ProcessId, ParentProcessId
| join kind=leftouter (
    DeviceNetworkEvents
    | where Timestamp >= ago(timeframe)
    | project NetworkTimestamp=Timestamp, DeviceName, InitiatingProcessFileName, RemoteIP, RemotePort, RemoteUrl, TransmitBytes, ReceiveBytes, Protocol
) on DeviceName, InitiatingProcessFileName
| extend TotalBytes = coalesce(TransmitBytes,0) + coalesce(ReceiveBytes,0)
| sort by Timestamp desc

2) Encrypted exfiltration via HTTPS (TLS/443)

Displays large HTTPS/TLS sessions (default >50 MB). Includes JA3 if available.

// TLS/HTTPS large transfers (last 24h) - sessions > 50MB
let timeframe = 24h;
let bytesThreshold = 50 * 1024 * 1024; // 50 MB
DeviceNetworkEvents
| where Timestamp >= ago(timeframe)
| where RemotePort == 443 or tostring(Protocol) has_any ("Tls","HTTPS")
| summarize BytesSent=sum(TransmitBytes), BytesReceived=sum(ReceiveBytes), FirstSeen=min(Timestamp), LastSeen=max(Timestamp), Processes=make_set(InitiatingProcessFileName) by RemoteIP, RemoteDomainName, tostring(AdditionalFields.ja3)
| extend TotalBytes = coalesce(BytesSent,0) + coalesce(BytesReceived,0)
| where TotalBytes >= bytesThreshold
| project FirstSeen, LastSeen, RemoteDomainName, RemoteIP, TotalBytes, BytesSent, BytesReceived, Processes, JA3 = tostring(AdditionalFields_ja3 = tostring(AdditionalFields.ja3))
| sort by TotalBytes desc

3) Remote Desktop / Remote Access Tools (RDP, AnyDesk, TeamViewer)

Detects RDP logons (LogonType 10) and suspicious remote access tool processes. Highlights off-hours activity.

// RDP logons and remote access tools (last 7 days)
let timeframe = 7d;
let offHoursStart = 0;
let offHoursEnd = 7;
let offHoursStart2 = 19;
DeviceLogonEvents
| where Timestamp >= ago(timeframe)
| where LogonType == 10  // RemoteInteractive (RDP)
| extend Hour = hourofday(Timestamp)
| extend OffHours = (Hour < offHoursEnd) or (Hour >= offHoursStart2)
| project Timestamp, DeviceName, AccountName, RemoteIP, LogonResult = ResultType, LogonType, Hour, OffHours
| join kind=leftouter (
    DeviceProcessEvents
    | where Timestamp >= ago(timeframe)
    | where FileName in~ ("AnyDesk.exe","TeamViewer.exe","mstsc.exe","teamviewer.exe","anydesk.exe")
    | project ProcTime=Timestamp, DeviceName, FileName, ProcessCommandLine, InitiatingProcessAccountName
) on DeviceName
| project Timestamp, DeviceName, AccountName, RemoteIP, LogonResult, Hour, OffHours, FileName, ProcessCommandLine, InitiatingProcessAccountName
| sort by Timestamp desc

4) DNS tunneling (unique subdomains / long labels / TXT spikes)

Finds domains with high numbers of unique subdomains, long/encoded labels, or excessive TXT/NULL queries.

// DNS tunneling heuristics - unique subdomains, long labels, TXT spikes
let timeframe_unique = 1h;
let timeframe_txt = 24h;
let unique_subdomain_threshold = 100;
let long_label_len = 40;
// Part A: unique subdomains per base domain (last 1h)
DnsEvents
| where TimeGenerated >= ago(timeframe_unique)
| extend qname = tolower(RecordName)
| extend baseDomain = tostring(strcat(split(qname,".")[-2],".",split(qname,".")[-1]))
| summarize UniqueSubdomains = dcount(qname) by baseDomain, ClientIP, bin(TimeGenerated, 1h)
| where UniqueSubdomains >= unique_subdomain_threshold
| project TimeGenerated, baseDomain, ClientIP, UniqueSubdomains
| union (
    // Part B: long labels and TXT/NULL spikes (last 24h)
    DnsEvents
    | where TimeGenerated >= ago(timeframe_txt)
    | extend labels = split(tolower(RecordName),".")
    | extend firstLabel = tostring(labels[0]), label_len = strlen(firstLabel), qtype = QueryType
    | where label_len > long_label_len or qtype in ("TXT","NULL")
    | summarize Count = count(), AvgLabelLen = avg(label_len) by tostring(RecordName), baseDomain = strcat(labels[-2],".",labels[-1]), ClientIP, qtype
    | where Count >= 5
    | project TimeGenerated = now(), baseDomain, RecordName, ClientIP, qtype, Count, AvgLabelLen
)
| sort by TimeGenerated desc



// =============================================================================
// 6. FILE TRANSFER VIA COMMAND-LINE TOOLS
// =============================================================================

// 6.1 Detectarea comenzilor curl, scp, wget, Invoke-WebRequest
DeviceProcessEvents
| where Timestamp > ago(1h)
| where ProcessCommandLine has_any ("curl", "wget", "scp", "Invoke-WebRequest", "iwr", "powershell", "pwsh")
| where ProcessCommandLine has_any ("http://", "https://", "ftp://", "sftp://")
| where ProcessCommandLine has_any ("-o", "--output", "-O", "--remote-name", "-OutFile")
| project Timestamp, DeviceName, AccountName, ProcessCommandLine, InitiatingProcessCommandLine, InitiatingProcessFileName
| extend ThreatLevel = "High"

// 6.2 PowerShell Web Request Detection
DeviceEvents
| where Timestamp > ago(1h)
| where ActionType == "PowerShellCommand"
| where AdditionalFields.Command has_any ("Invoke-WebRequest", "wget", "curl", "iwr", "Net.WebClient", "DownloadFile", "DownloadString")
| project Timestamp, DeviceName, AccountName, AdditionalFields.Command
| extend ThreatLevel = "High"

// 6.3 Suspicious File Downloads
DeviceFileEvents
| where Timestamp > ago(1h)
| where ActionType == "FileCreated"
| where InitiatingProcessCommandLine has_any ("curl", "wget", "powershell", "cmd")
| where FileName has_any (".exe", ".bat", ".ps1", ".vbs", ".jar", ".zip", ".rar")
| project Timestamp, DeviceName, AccountName, FileName, FolderPath, InitiatingProcessCommandLine
| extend ThreatLevel = "Medium"

// =============================================================================
// 7. ENCRYPTED EXFILTRATION VIA HTTPS
// =============================================================================

// 7.1 Large HTTPS POST Requests
DeviceNetworkEvents
| where Timestamp > ago(1h)
| where RemotePort == 443
| where LocalPort != 443
| summarize TotalBytes = sum(SentBytes) by DeviceName, RemoteIP, RemoteUrl, bin(Timestamp, 5m)
| where TotalBytes > 50000000 // 50MB threshold
| project Timestamp, DeviceName, RemoteIP, RemoteUrl, TotalBytes
| extend ThreatLevel = "High"

// 7.2 Suspicious HTTPS Traffic to External Domains
let SuspiciousDomains = dynamic(["pastebin.com", "transfer.sh", "wetransfer.com", "mega.nz", "dropbox.com"]);
DeviceNetworkEvents
| where Timestamp > ago(1h)
| where RemotePort == 443
| where RemoteUrl has_any (SuspiciousDomains)
| summarize RequestCount = count(), TotalBytes = sum(SentBytes) by DeviceName, RemoteUrl, AccountName, bin(Timestamp, 10m)
| where RequestCount > 5 or TotalBytes > 10000000
| project Timestamp, DeviceName, AccountName, RemoteUrl, RequestCount, TotalBytes
| extend ThreatLevel = "Medium"

// 7.3 Unusual TLS Certificate Detection
DeviceNetworkEvents
| where Timestamp > ago(1h)
| where RemotePort == 443
| where RemoteIP !startswith "10." and RemoteIP !startswith "192.168." and RemoteIP !startswith "172."
| summarize UniqueDestinations = dcount(RemoteIP), TotalConnections = count() by DeviceName, AccountName, bin(Timestamp, 15m)
| where UniqueDestinations > 20 or TotalConnections > 100
| project Timestamp, DeviceName, AccountName, UniqueDestinations, TotalConnections
| extend ThreatLevel = "Medium"

// =============================================================================
// 8. REMOTE DESKTOP / REMOTE ACCESS TOOLS
// =============================================================================

// 8.1 RDP Connection Monitoring
DeviceLogonEvents
| where Timestamp > ago(1h)
| where LogonType == "RemoteInteractive"
| where ActionType == "LogonSuccess"
| project Timestamp, DeviceName, AccountName, RemoteIP, LogonType
| extend ThreatLevel = "Medium"

// 8.2 Remote Access Tool Installation Detection
let RATKeywords = dynamic(["teamviewer", "anydesk", "vnc", "remotepc", "logmein", "gotomypc", "chrome remote", "remote desktop"]);
DeviceProcessEvents
| where Timestamp > ago(1h)
| where ProcessCommandLine has_any (RATKeywords) or FileName has_any (RATKeywords)
| project Timestamp, DeviceName, AccountName, FileName, ProcessCommandLine, InitiatingProcessFileName
| extend ThreatLevel = "High"

// 8.3 Suspicious RDP Session Activity
DeviceEvents
| where Timestamp > ago(1h)
| where ActionType has "Rdp"
| where AccountName != "SYSTEM"
| summarize SessionCount = count() by DeviceName, AccountName, bin(Timestamp, 1h)
| where SessionCount > 5
| project Timestamp, DeviceName, AccountName, SessionCount
| extend ThreatLevel = "Medium"

// 8.4 External RDP Connections
let InternalNetworks = dynamic(["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]);
DeviceNetworkEvents
| where Timestamp > ago(1h)
| where RemotePort == 3389 or LocalPort == 3389
| where not(ipv4_is_in_any_range(RemoteIP, InternalNetworks))
| project Timestamp, DeviceName, AccountName, RemoteIP, RemotePort, LocalPort
| extend ThreatLevel = "High"

// =============================================================================
// 9. DNS TUNNELING
// =============================================================================

// 9.1 Long Subdomain Detection
DnsEvents
| where Timestamp > ago(1h)
| where QueryType == "A" or QueryType == "TXT"
| extend SubdomainLength = strlen(Name)
| where SubdomainLength > 50
| project Timestamp, Computer, Name, QueryType, SubdomainLength
| extend ThreatLevel = "High"

// 9.2 High Frequency DNS Queries
DnsEvents
| where Timestamp > ago(1h)
| summarize QueryCount = count() by Computer, Name, bin(Timestamp, 1m)
| where QueryCount > 30
| project Timestamp, Computer, Name, QueryCount
| extend ThreatLevel = "Medium"

// 9.3 Suspicious DNS Query Patterns
DnsEvents
| where Timestamp > ago(1h)
| where Name contains "." and Name !endswith ".local"
| extend DomainParts = split(Name, ".")
| extend SubdomainCount = array_length(DomainParts)
| where SubdomainCount > 4
| project Timestamp, Computer, Name, SubdomainCount
| extend ThreatLevel = "Medium"

// 9.4 Base64-like Subdomain Detection
DnsEvents
| where Timestamp > ago(1h)
| where Name matches regex @"^[A-Za-z0-9+/=]{20,}\."
| project Timestamp, Computer, Name, QueryType
| extend ThreatLevel = "High"

// 9.5 TXT Record Abuse Detection
DnsEvents
| where Timestamp > ago(1h)
| where QueryType == "TXT"
| summarize TXTQueryCount = count() by Computer, Name, bin(Timestamp, 5m)
| where TXTQueryCount > 10
| project Timestamp, Computer, Name, TXTQueryCount
| extend ThreatLevel = "High"

// =============================================================================
// ADVANCED CORRELATION QUERIES
// =============================================================================

// Multi-stage Attack Detection
let FileTransferEvents = (
    DeviceProcessEvents
    | where Timestamp > ago(1h)
    | where ProcessCommandLine has_any ("curl", "wget", "Invoke-WebRequest")
    | project Timestamp, DeviceName, AccountName, Activity = "FileTransfer"
);
let NetworkEvents = (
    DeviceNetworkEvents
    | where Timestamp > ago(1h)
    | where RemotePort == 443
    | summarize TotalBytes = sum(SentBytes) by DeviceName, AccountName, bin(Timestamp, 5m)
    | where TotalBytes > 10000000
    | project Timestamp, DeviceName, AccountName, Activity = "LargeUpload"
);
union FileTransferEvents, NetworkEvents
| summarize ActivitiesCount = dcount(Activity), Activities = make_set(Activity) by DeviceName, AccountName, bin(Timestamp, 10m)
| where ActivitiesCount >= 2
| extend ThreatLevel = "Critical"

// Behavioral Anomaly Detection
DeviceProcessEvents
| where Timestamp > ago(24h)
| where ProcessCommandLine has_any ("curl", "wget", "powershell", "cmd")
| summarize ProcessCount = count(), UniqueProcesses = dcount(ProcessCommandLine) by DeviceName, AccountName, bin(Timestamp, 1h)
| where ProcessCount > 20 or UniqueProcesses > 10
| project Timestamp, DeviceName, AccountName, ProcessCount, UniqueProcesses
| extend ThreatLevel = "Medium"




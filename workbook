6
let Selected = '{TableName}';
union withsource = _TableSource *
| where _TableSource == Selected
| take 1
| project ColumnNames = bag_keys(todynamic(pack_all()))
| mv-expand ColumnNames
| summarize by ColumnNames

xxxxxxxx

let Selected = '{TableName}';
union withsource = _TableSource *
| where _TableSource == Selected
| take 1
| project ColumnNames = bag_keys(todynamic(pack_all()))
| mv-expand ColumnNames
| summarize by ColumnName = tostring(ColumnNames)


xxxxxxx

let Selected = '{TableName}';
union withsource = _TableSource *
| where _TableSource == Selected
| take 1
| project ColumnNames = bag_keys(todynamic(pack_all()))
| mv-expand ColumnNames
| summarize by ColumnName = tostring(ColumnNames)

xxxxxxx

let Selected = '{TableName}';
union withsource = _TableSource *
| where _TableSource == Selected
| take 1
| project ColumnNames = bag_keys(todynamic(pack_all()))
| mv-expand ColumnNames
| summarize ColumnList = strcat_array(make_list(tostring(ColumnNames)), " ")

xxxxxx

union isfuzzy=true
    Heartbeat,
    Perf,
    AzureDiagnostics,
    Syslog,
    SecurityEvent
| where $table == '{selectedTable}'
| take 10

xxxxxxx

{TableName}
| summarize      total = count(),
                 vendors = make_set(DeviceVendor, 5),
                 products = make_set(DeviceProduct, 5),
                 sources = make_set(SourceSystem, 5)
let TableConnector = datatable(TableName:string, Connector:string)
[
  "AADManagedIdentitySignInLogs", "Azure AD (Entra ID) diagnostics",
  "AWSCloudTrail",                "Amazon Web Services â€“ S3 / CloudTrail connector",
  ...
];
TableConnector
| where TableName == '{TableName}'


xxxxxxxx

{TableName}
| extend DeviceVendor  = column_ifexists("DeviceVendor",  "N/A")
| extend DeviceProduct = column_ifexists("DeviceProduct", "N/A")
| extend SourceSystem  = column_ifexists("SourceSystem",  "N/A")
| summarize
      total    = count(),
      vendors  = make_set(DeviceVendor,  5),
      products = make_set(DeviceProduct, 5),
      sources  = make_set(SourceSystem,  5)


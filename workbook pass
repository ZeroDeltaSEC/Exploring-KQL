6Sure! Here's a detailed step-by-step tutorial in English for creating a Microsoft Sentinel Workbook that allows selecting a language and searching logs for password/credential-related terms in that language.


---

Objective

To create a Sentinel Workbook that lets analysts choose a language (e.g., Romanian, English, French) and dynamically search logs for terms related to passwords or credentials in that language.


---

Step-by-Step Guide

Step 1: Open Microsoft Sentinel and Create a New Workbook

1. Go to the Azure Portal.


2. Navigate to Microsoft Sentinel.


3. Select the Sentinel workspace you want to use.


4. In the left-hand menu, click Workbooks.


5. Click + New at the top to create a new workbook.




---

Step 2: Add a Language Selection Parameter

1. In the workbook, click Edit (top-left).


2. Click Add parameter.


3. Configure the parameter as follows:

Name: selectedLanguage

Display name: Select Language

Type: Drop down

Values: Choose Manual



4. In the textbox that appears, enter the supported languages (one per line):

English
Romanian
French
Spanish
German
Italian
Portuguese
Russian
Chinese
Japanese
Arabic
Hindi


[
  { "text": "English", "value": "English" },
  { "text": "Romanian", "value": "Romanian" },
  { "text": "French", "value": "French" },
  { "text": "Spanish", "value": "Spanish" },
  { "text": "German", "value": "German" },
  { "text": "Portuguese", "value": "Portuguese" },
  { "text": "Russian", "value": "Russian" },
  { "text": "Chinese", "value": "Chinese" },
  { "text": "Japanese", "value": "Japanese" },
  { "text": "Arabic", "value": "Arabic" },
  { "text": "Hindi", "value": "Hindi" }
]


5. Click Save to add the parameter.




---

Step 3: Add a Log Analytics Query Using the Parameter

1. Click Add query.


2. Choose your Log Analytics workspace.


3. In the KQL editor, paste a query that dynamically adjusts based on the selected language.



Example KQL Query:

let selectedLanguage = '{selectedLanguage}';
let termMap = datatable(Language:string, Term:string)
[
    "Romanian", "parola",
    "Romanian", "cuvant de trecere",
    "Romanian", "pwd",
    "Romanian", "cod secret",
    "English", "password",
    "English", "pass",
    "English", "PIN",
    "French", "mot de passe",
    "French", "code secret",
    "Spanish", "contraseña",
    "German", "Passwort",
    "Italian", "parola d'ordine",
    "Portuguese", "senha",
    "Russian", "пароль",
    "Chinese", "密码",
    "Japanese", "パスワード",
    "Arabic", "كلمة المرور",
    "Hindi", "पासवर्ड"
];
let termsToSearch = termMap
    | where Language == selectedLanguage
    | summarize Terms=make_list(Term);
YourLogTable  // replace with your actual table like SecurityEvent, etc.
| where YourTextField has_any (Terms)
| project TimeGenerated, YourTextField, Computer, Account, EventID

> Replace YourLogTable with a relevant table (like SecurityEvent, DeviceLogonEvents, CustomLog_CL, etc.), and YourTextField with the field you want to search (e.g., EventData, Message, or a 



let selectedLanguage = '{selectedLanguage}';
let termMap = datatable(Language:string, Term:string)
[
    "Romanian", "parola",
    "Romanian", "cuvant de trecere",
    "Romanian", "pwd",
    "Romanian", "cod secret",
    "English", "password",
    "English", "pass",
    "English", "PIN",
    "French", "mot de passe",
    "French", "code secret",
    "Spanish", "contraseña",
    "German", "Passwort",
    "Italian", "parola d'ordine",
    "Portuguese", "senha",
    "Russian", "пароль",
    "Chinese", "密码",
    "Japanese", "パスワード",
    "Arabic", "كلمة المرور",
    "Hindi", "पासवर्ड"
];
let termsToSearch = termMap
    | where Language == selectedLanguage
    | summarize terms = make_list(Term);
OfficeActivity
| where isnotempty(SourceFileName)
| where SourceFileName has_any (termsToSearch)
| project TimeGenerated, SourceFileName, UserId, Operation


4. Click Run query to verify it works.


5. Click Done Editing Query and select a visualization (Table is most common).




---

Step 4: Format and Save the Workbook

1. Adjust layout and titles as needed.


2. Click Done Editing (top right).


3. Click Save and give your workbook a name like:
Multilingual Credential Search Workbook




---

Optional Enhancements

Use a Watchlist: If you want to manage the list of terms externally, create a Watchlist in Sentinel and join it into your KQL instead of hardcoding datatable().

Add multiple query panels: One for credentials, another for passwords, another for failed logins, etc.

Include date range filters to allow time-based searches.



---

Would you like me to also give you the watchlist-based KQL version or help export this list to CSV/JSON for upload?


[
  { "text": "xlsx", "value": "xlsx" },
  { "text": "xls", "value": "xls" },
  { "text": "csv", "value": "csv" },
  { "text": "docx", "value": "docx" },
  { "text": "pdf", "value": "pdf" },
  { "text": "pptx", "value": "pptx" },
  { "text": "txt", "value": "txt" },
  { "text": "zip", "value": "zip" }
]


let selectedLanguage = '{selectedLanguage}';
let selectedExtension = '{FileType}';
let termMap = datatable(Language:string, Term:string)
[
    "Romanian", "parola",
    "Romanian", "cuvant de trecere",
    "Romanian", "pwd",
    "Romanian", "cod secret",
    "English", "password",
    "English", "pass",
    "English", "PIN",
    "French", "mot de passe",
    "French", "code secret",
    "Spanish", "contraseña",
    "German", "Passwort",
    "Italian", "parola d'ordine",
    "Portuguese", "senha",
    "Russian", "пароль",
    "Chinese", "密码",
    "Japanese", "パスワード",
    "Arabic", "كلمة المرور",
    "Hindi", "पासवर्ड"
];
let termsToSearch = termMap
    | where Language == selectedLanguage
    | summarize terms = make_list(Term);
OfficeActivity
| where isnotempty(SourceFileName)
| where SourceFileName has_any (termsToSearch)
| where SourceFileName endswith strcat(".", selectedExtension)
| project TimeGenerated, SourceFileName, UserId, Operation, SourceFileExtension
